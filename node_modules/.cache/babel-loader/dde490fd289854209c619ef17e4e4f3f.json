{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\traction-project\\\\src\\\\components\\\\Motor\\\\Motor.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport api from \"../services/api.js\";\nimport styled from \"styled-components\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport \"../../styles/App.css\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  width: 300px;\n  height: 430px;\n  margin: 5px 20px;\n`;\n_c = Grid;\n\nfunction Motor() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    api.get(\"assets\").then(response => {\n      console.log(\"motor\", response.data);\n      setModels(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container grid grid-template-columns\",\n    children: models.map((models, key) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"300\",\n              image: models.image,\n              alt: \"engine image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleClickOpen,\n                children: \"Engine Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: open,\n                onClose: handleClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"alert-dialog-title\",\n                children: \"Use Google's location service?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                  id: \"alert-dialog-description\",\n                  children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"div\",\n                children: models.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"\\uD83D\\uDC96 \", models.healthscore, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Motor, \"/GhBPrnkmOTPn669kEOaDL2IsEs=\");\n\n_c2 = Motor;\nexport default Motor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Motor\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/traction-project/src/components/Motor/Motor.jsx"],"names":["useEffect","useState","api","styled","Card","CardContent","CardMedia","Typography","CardActionArea","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","div","Motor","models","setModels","open","setOpen","handleClickOpen","handleClose","get","then","response","console","log","data","map","key","maxWidth","image","name","healthscore"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport api from \"../services/api.js\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport \"../../styles/App.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nconst Grid = styled.div`\r\n  width: 300px;\r\n  height: 430px;\r\n  margin: 5px 20px;\r\n`;\r\n\r\nfunction Motor() {\r\n  const [models, setModels] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.get(\"assets\").then((response) => {\r\n      console.log(\"motor\", response.data);\r\n      setModels(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container grid grid-template-columns\">\r\n      {models.map((models, key) => {\r\n        return (\r\n          <Grid>\r\n            <Card sx={{ maxWidth: 500 }}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"300\"\r\n                  image={models.image}\r\n                  alt=\"engine image\"\r\n                />\r\n                <CardContent>\r\n                  <Button variant=\"contained\" onClick={handleClickOpen}>\r\n                    Engine Info\r\n                  </Button>\r\n                  <Dialog \r\n                  open={open} \r\n                  onClose={handleClose}>                   \r\n                  </Dialog>\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {models.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    💖 {models.healthscore}%\r\n                  </Typography>\r\n                  \r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Motor;\r\n"]},"metadata":{},"sourceType":"module"}