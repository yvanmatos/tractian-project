{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\traction-project\\\\src\\\\components\\\\Motor\\\\Motor.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nome = styled.li`\n  font-weight: bold;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n`;\n_c = Nome;\n\nfunction Motor() {\n  _s();\n\n  const [models, setModels] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      if (query === '') {\n        const result = await axios(`https://my-json-server.typicode.com/tractian/fake-api/assets`);\n        console.log(result.data);\n        setModels(result.data);\n      } else {\n        const result = await axios(`https://my-json-server.typicode.com/tractian/fake-api/assets`);\n        console.log(result.data);\n        setModels(result.data);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: models.map(model => /*#__PURE__*/_jsxDEV(Nome, {\n        model: model\n      }, model.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Motor, \"qfEEVmW6eEe/ebbzwAVfas8PfMM=\");\n\n_c2 = Motor;\nexport default Motor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Nome\");\n$RefreshReg$(_c2, \"Motor\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/traction-project/src/components/Motor/Motor.jsx"],"names":["useEffect","useState","axios","styled","Nome","li","Motor","models","setModels","query","setQuery","fetchData","result","console","log","data","map","model","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,EAAG;AACvB;AACA;AACA,CAHA;KAAMD,I;;AAKN,SAASE,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,UAAIF,KAAK,KAAK,EAAd,EAAkB;AAChB,cAAMG,MAAM,GAAG,MAAMV,KAAK,CACvB,8DADuB,CAA1B;AAGAW,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAP,QAAAA,SAAS,CAACI,MAAM,CAACG,IAAR,CAAT;AACD,OAND,MAMO;AACL,cAAMH,MAAM,GAAG,MAAMV,KAAK,CACvB,8DADuB,CAA1B;AAGAW,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAP,QAAAA,SAAS,CAACI,MAAM,CAACG,IAAR,CAAT;AACD;AACF,KAdD;;AAeAJ,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACF,KAAD,CAjBM,CAAT;AAmBA,sBACE;AAAA,2BACE;AAAA,gBACGF,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,SAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCQZ,K;;MAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nome = styled.li`\r\n  font-weight: bold;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n`;\r\n\r\nfunction Motor() {\r\n  const [models, setModels] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (query === '') {\r\n        const result = await axios(\r\n          `https://my-json-server.typicode.com/tractian/fake-api/assets`\r\n        );\r\n        console.log(result.data);\r\n        setModels(result.data);\r\n      } else {\r\n        const result = await axios(\r\n          `https://my-json-server.typicode.com/tractian/fake-api/assets`\r\n        );\r\n        console.log(result.data);\r\n        setModels(result.data);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {models.map((model) => (\r\n          <Nome key={model.id} model={model}></Nome>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Motor;\r\n"]},"metadata":{},"sourceType":"module"}